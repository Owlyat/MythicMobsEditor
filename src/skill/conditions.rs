use serde::{Deserialize, Serialize};

#[derive(Clone, Debug, PartialEq, Serialize, Deserialize, strum::Display)]
pub enum Condition {
    #[strum(to_string = "Altitude", serialize = "- altitude{{}}")]
    /// Tests how far above the ground the target entity is
    Altitude {
        /// The height range to check
        height: u8,
        /// Limits the maximum height this condition can checks for
        /// Default 30
        max_height: u8,
    },
    #[strum(to_string = "Biome", serialize = "- biome{{b={biome}}} {exact}")]
    /// Tests if the target is within the given list of biomes
    Biome {
        /// A list of biomes to check
        biome: String,
        /// Whether to match the biome exactly
        exact: bool,
    },
    #[strum(
        to_string = "Biome Type",
        serialize = "- biometype{{t={biome_type}}} {exact}"
    )]
    /// Tests for the biome category at a location.
    BiomeType {
        /// A list of biomes to check
        /// Biome Types:
        /// none
        /// taiga
        /// extreme_hills
        /// jungle
        /// mesa
        /// plains
        /// savanna
        /// icy
        /// the_end
        /// beach
        /// forest
        /// ocean
        /// desert
        /// river
        /// swamp
        /// mushroom
        /// nether
        /// underground
        /// mountain
        biome_type: String,
        /// Whether to match the type exactly
        exact: bool,
    },
    BlockType,
    BlockTypeInRadius,
    Blocking,
    BoundingBoxesOverlap,
    BowTension,
    Burning,
    Chance,
    Charged,
    Children,
    Color,
    CompareValues,
    Crouching,
    Cuboid,
    DamageAmount,
    DamageCause,
    DamageTag,
    Dawn,
    Day,
    Dimension,
    DirectionalVelocity,
    Distance,
    DistanceFromLocation,
    DistanceFromPin,
    DistanceFromSpawn,
    DistanceFromTrackedLocation,
    Dusk,
    EnchantingExperience,
    EnchantingLevel,
    EnderDragonAlive,
    EnderDragonPhase,
    EntityItemIsSimilar,
    EntityItemType,
    EntityMaterialType,
    EntityType,
    Faction,
    FallSpeed,
    FieldOfView,
    FoodLevel,
    FoodSaturation,
    Gamemode,
    Gliding,
    GlobalScore,
    HasAI,
    HasAura,
    HasAuraStacks,
    HasAuraType,
    HasCurrency,
    HasEnchantment,
    HasFreeInventorySlot,
    HasGravity,
    HasItem,
    HasOffhand,
    HasOwner,
    HasParent,
    HasPassenger,
    HasPermission,
    HasPotionEffect,
    HasTag,
    Health,
    HealthPercent,
    Height,
    HeightAbove,
    HeightBelow,
    Holding,
    InClaim,
    InCombat,
    InPinRegion,
    IsInvulnerable,
    IsInSurvivalMode,
    Inside,
    IsBaby,
    IsCaster,
    IsChild,
    IsClimbing,
    IsCreeperPrimed,
    IsFlying,
    IsFrozen,
    IsLeashed,
    IsLiving,
    IsMonster,
    IsMythicMob,
    IsParentAlive,
    IsParent,
    IsPlayer,
    IsRaiderPatrolLeader,
    IsSaddled,
    IsTamed,
    IsUsingSpyglass,
    ItemGroupOnCooldown,
    ItemIsSimilar,
    ItemRecharging,
    ItemType,
    LastDamageCause,
    LastSignal,
    Level,
    LightLevel,
    LightLevelFromBlocks,
    LineOfSight,
    LineOfSightFromOrigin,
    LivingInRadius,
    LocalDifficulty,
    LookingAt,
    LunarPhase,
    MaterialIsOnCooldown,
    MobsInChunk,
    MobsInRadius,
    MobsInWorld,
    MobsNearOrigin,
    MobSize,
    Moist,
    MoistureLevel,
    MotionX,
    MotionY,
    MotionZ,
    Mounted,
    Moving,
    MythicMobType,
    MythicPack,
    MythicPackVersion,
    MythicPackVersionGreater,
    Name,
    NearClaim,
    Night,
    NotInRegion,
    OffGCD,
    OnBlock,
    OnGround,
    OriginDistanceFromPin,
    OriginLocation,
    Outside,
    Owner,
    OwnerIsOnline,
    Pitch,
    PlayerKills,
    PlayerNotWithin,
    PlayerWithin,
    PlayersInRadius,
    PlayersInWorld,
    PlayersOnline,
    Plugin,
    Premium,
    Raining,
    Region,
    SameFaction,
    Score,
    ServerIsPaper,
    HasScoreboardTag,
    Sheared,
    ShieldBlocking,
    Sitting,
    SkillLevel,
    SkillTrigger,
    Slot,
    SlotType,
    Sneaking,
    Snowing,
    Sphere,
    Sprinting,
    Storming,
    StringEquals,
    StringEqualsIgnoreCase,
    StringLength,
    StringMatches,
    TargetLocation,
    Thundering,
    Time,
    TimeInRadius,
    TrackedLocation,
    Velocity,
    Wet,
    World,
    WorldDifficulty,
    WorldTime,
    Yaw,
}
